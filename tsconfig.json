{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    "incremental": false,                 /* Enable incremental compilation */
    "target": "ES6",                      /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "ES6",                      /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "lib": ["DOM", "ESNext"],             /* Specify library files to be included in the compilation. */
    "allowJs": false,                     /* Allow javascript files to be compiled. */
    "jsx": "react-jsx",                   /* Specify JSX code generation: 'preserve', 'react-native', 'react-jsx', react-jsxdev or 'react'. */
    "sourceMap": false,                    /* Generates corresponding '.map' file. */
    "outDir": "build",                    /* Redirect output structure to the directory. */
    "removeComments": true,              /* Do not emit comments to output. */
    "strict": true,                       /* Enable all strict type-checking options. */
    "noImplicitAny": false,               /* Raise error on expressions and declarations with an implied 'any' type. */
    "noImplicitThis": false,              /* Allow implicit this */

    /* Experimental Options */
    "experimentalDecorators": true,       /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,     /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true,                      /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true,  /* Disallow inconsistently-cased references to the same file. */

    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,               /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "resolveJsonModule": true,             /* Allows usage of JSON */
    "types": ["node", "jest", "@testing-library/jest-dom"],                     /* Type declaration files to be included in compilation. */
    "baseUrl": "./src",                    /* Base directory to resolve non-absolute module names. */
    "paths": {                             /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      "@App/*": ["./*"],
      "@package" : ["../package.json"],
      "@manifest" : ["../public/manifest.json"]
    }
  },
  "exclude": [
    "node_modules",
    "build",
    "scripts",
    "public"
  ],
  "include": [
    "src"
  ]
}
